{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 9a06601e42e87936e0bc","webpack:///./es/thunk.js","webpack:///./es/h.js","webpack:///./es/vnode.js","webpack:///./es/is.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;;;;;;;;AC7DA;AAAA;AAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,qDAAC;AACZ;AACA,eAAe,iBAAiB;AAChC;AACA;AACA,KAAK;AACL,EAAE;AAAA;AAAA;AACa,oEAAK,EAAC;;;;;;;;AC3CrB;AAAA;AAAA;AAAgC;AACL;;AAE3B;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;AACO;AACP,iBAAiB;AACjB;AACA;AACA;AACA,YAAY,kDAAQ;AACpB,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA,iBAAiB,sDAAY;AAC7B,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAQ;AACpB;AACA;AACA;AACA,iBAAiB,sDAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,qBAAqB;AACxC,gBAAgB,sDAAY;AAC5B,8BAA8B,6DAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6DAAK;AAChB;AACA;AACe,2EAAC,EAAC;;;;;;;;AC9HjB;AAAA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;AACA;AACO;AACP;AACA;AACA,YAAY;AACZ;AACe,+EAAK,EAAC;;;;;;;;ACjBrB;AAAA;AACO,4BAA4B;AAAA;AAAA;AACnC;AACO;AACP;AACA","file":"thunkLib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ThunkLib\"] = factory();\n\telse\n\t\troot[\"ThunkLib\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9a06601e42e87936e0bc","import { h } from './h';\nfunction copyToThunk(vnode, thunk) {\n    thunk.elm = vnode.elm;\n    vnode.data.fn = thunk.data.fn;\n    vnode.data.args = thunk.data.args;\n    thunk.data = vnode.data;\n    thunk.children = vnode.children;\n    thunk.text = vnode.text;\n    thunk.elm = vnode.elm;\n}\nfunction init(thunk) {\n    const cur = thunk.data;\n    const vnode = cur.fn.apply(undefined, cur.args);\n    copyToThunk(vnode, thunk);\n}\nfunction prepatch(oldVnode, thunk) {\n    let i, old = oldVnode.data, cur = thunk.data;\n    const oldArgs = old.args, args = cur.args;\n    if (old.fn !== cur.fn || oldArgs.length !== args.length) {\n        copyToThunk(cur.fn.apply(undefined, args), thunk);\n        return;\n    }\n    for (i = 0; i < args.length; ++i) {\n        if (oldArgs[i] !== args[i]) {\n            copyToThunk(cur.fn.apply(undefined, args), thunk);\n            return;\n        }\n    }\n    copyToThunk(oldVnode, thunk);\n}\nexport const thunk = function thunk(sel, key, fn, args) {\n    if (args === undefined) {\n        args = fn;\n        fn = key;\n        key = undefined;\n    }\n    return h(sel, {\n        key: key,\n        hook: { init, prepatch },\n        fn: fn,\n        args: args\n    });\n};\nexport default thunk;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./es/thunk.js\n// module id = 0\n// module chunks = 0","import { vnode } from './vnode';\nimport * as is from './is';\n\n/**\n *svg使用xml格式定义图图像，所以需要给svg添加namespace，也就是它内部的标签节点需要按照svg标准来渲染\n *\n * @param {*} data svg vnode的data\n * @param {*} children \n * @param {*} sel svg、svg#xxx、svg.xxx\n */\n/*\nconst vnode = h('svg', {\n    attrs: {\n        width: '100%',\n        height: '100%'\n    },\n}, [h('rect', {\n    attrs: {\n        width: 300,\n        height: 100\n    },\n    style: {\n        fill: 'rgb(0, 0, 255)',\n        strokeWidth: 1,\n        stroke: 'rgb(0, 0, 0)'\n    }\n})])\n*/\nfunction addNS(data, children, sel) {\n    data.ns = 'http://www.w3.org/2000/svg';\n    // <foreignObject>元素的作用是可以在其中使用具有其它XML命名空间的XML元素\n    // 就像它内部可以使用xhtml标准解析\n    // <svg xmlns=\"http://www.w3.org/2000/svg\">\n    //     <foreignObject width=\"120\" height=\"50\">\n    //         <body xmlns=\"http://www.w3.org/1999/xhtml\">\n    //             <p>文字。</p>\n    //         </body>\n    //     </foreignObject>\n    // </svg>\n    // 它本身不用添加ns\n    if (sel !== 'foreignObject' && children !== undefined) {\n        for (let i = 0; i < children.length; ++i) {\n            let childData = children[i].data;\n            if (childData !== undefined) {\n                addNS(childData, children[i].children, children[i].sel);\n            }\n        }\n    }\n}\n\n/**\n *就是处理传进来的参数，创建一个Vnode对象，就像Vue里的render函数一样\n *\n * @export\n * @param {*} sel 节点类型\n * @param {*} b \n * @param {*} c\n * @returns\n */\nexport function h(sel, b, c) {\n    var data = {}, children, text, i;\n    if (c !== undefined) {\n        // 若是三参均在，那么b就是data、c就是children\n        data = b;\n        if (is.array(c)) {\n            // 'div', { id: 'container'}, [vnode1, vnode2...]\n            // 若是c是数组，那么就是vnode子元素\n            children = c;\n        }\n        else if (is.primitive(c)) {\n            // 'div', { id: 'container'}, 123\n            // 若c是字符串或者数字，那么该节点就是文本节点\n            text = c;\n        }\n        else if (c && c.sel) {\n            // 'div', { id: 'container'}, vnode1\n            // 若是这种传参，那么转成数组即可\n            children = [c];\n        }\n    }\n    else if (b !== undefined) {\n        if (is.array(b)) {\n            // 'div', [vnode1, vnode2...]\n            children = b;\n        }\n        else if (is.primitive(b)) {\n            // 'div', 123\n            text = b;\n        }\n        else if (b && b.sel) {\n            // 'div', vnode1\n            children = [b];\n        }\n        else {\n            // 'div', {\n            //     style: {\n            //         fontWeight: 'normal',\n            //         fontStyle: 'italic'\n            //     }\n            // }\n            data = b;\n        }\n    }\n    /*\n    h('div', {\n        style: {\n            fontWeight: 'normal',\n            fontStyle: 'italic'\n        }\n    }, [1, 2, 3])*/\n    // 这时候判断下children是否存在，存在的话就判断下每项子元素是否是数字或者字符串，是的话就把它转成vnode对象\n    if (children !== undefined) {\n        for (i = 0; i < children.length; ++i) {\n            if (is.primitive(children[i]))\n                children[i] = vnode(undefined, undefined, undefined, children[i], undefined);\n        }\n    }\n    // sel: svg、svg#xxx、svg.xxx\n    // 也就是这个节点是svg的话那么需要处理下namespace的问题\n    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&\n        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {\n        addNS(data, children, sel);\n    }\n    return vnode(sel, data, children, text, undefined);\n}\n;\nexport default h;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./es/h.js\n// module id = 1\n// module chunks = 0","/**Vnode对象类型\n *\n *\n * @export\n * @param {*} sel 节点类型，eg：div、span#a.b（<span id=\"a\" class=\"b\">）\n * @param {*} data 节点数据，包括style、attr、event等等\n * @param {*} children 子元素数组\n * @param {*} text 节点的文本内容\n * @param {*} elm 该vnode对应的真实的element\n * @returns\n */\n// 值得注意的是，text按理可以放进children，不过因为有了text，那么肯定就没有children，反之亦然。所以单独放出来，便于处理\nexport function vnode(sel, data, children, text, elm) {\n    // 用于vnode之间的比对\n    let key = data === undefined ? undefined : data.key;\n    return { sel, data, children, text, elm, key };\n}\nexport default vnode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./es/vnode.js\n// module id = 2\n// module chunks = 0","// Array.isArray引用，若是想换下判断array的方法就很方便了\nexport const array = Array.isArray;\n// 其实就是为了方便传参用的，毕竟比如我生成一个textContent是abc的div，还写一大串，显得有点麻烦\nexport function primitive(s) {\n    return typeof s === 'string' || typeof s === 'number';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./es/is.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}